How to do a release
===================

Prerequisites:

* Is NEWS.txt up to date?
* Ensure that all branches are up to date (git fetch origin).
** The release plugin does a plain "git push", which pushes all branches
   by default.  This will fail if any branch is behind.
   Typically, this means the gh-pages branch.
* Is JAVA_HOME pointing at java 5?  We need to be compatible with Java
  5, not 6.

First, read your GPG passphrase into a variable.  Unfortunately, I can't
make the GPG plugin read from stdin during the release, so it has to be
done this way.

  $ read -s 'pw?Password: '

Put the version into a shell variable for easy access (and cut'n'paste
ability).

  $ ver=1.3.4

Next, run the release.

  $ mvn -Dtag="rel-$ver" -Dgpg.passphrase="$pw" release:prepare release:perform

In case this barfs after the "git push" stage, edit release.properties and
change the phase from "run-preparation-goals" to "scm-commit-release".  Yes,
this is utterly horrible.

Now, create the distribution.

  $ git checkout rel-$ver
  $ mvn -Pdist clean verify

Create a source archive.

  $ bin/src-archive jslint4java-dist/target/jslint4java-$ver-dist.zip

With that done, upload the dist and src archives to google code.

  $ bin/upload-to-googlecode jslint4java-dist/target/jslint4java-$ver-dist.zip

Import the documentation to google code svn.

  $ bin/import-docs-to-googlecode jslint4java-dist/target/jslint4java-$ver-dist.zip

Now, update google code:

* Add news to front page.
* Update docs links.
* Update javadocs links.
* Add new Milestone for the next release.

Send a mail to <jslint_com@yahoogroups.com> noting the new release.

Write a blog post pointing out the new release.
