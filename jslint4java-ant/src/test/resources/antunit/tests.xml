<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->
<project name="jslint-antunit"
         default="allTests"
         xmlns:au="antlib:org.apache.ant.antunit"
         xmlns:jsl="antlib:net.happygiraffe.jslint">
    <description>
Tests for the JSLint ant task.
	</description>

    <taskdef uri="antlib:org.apache.ant.antunit"
             resource="org/apache/ant/antunit/antlib.xml"
             classpath="${test.classpath}" />
    <taskdef uri="antlib:net.happygiraffe.jslint"
             resource="net/happygiraffe/jslint/antlib.xml"
             classpath="${test.classpath}" />

    <!-- Have to convert from boolean for use in target/@unless. -->
    <condition property="skipping">
      <istrue value="${test.skipped}" />
    </condition>

    <target name="allTests" unless="skipping">
        <au:antunit failonerror="true">
            <file file="${ant.file}" />
            <au:plainlistener />
        </au:antunit>
    </target>

	<target name="testNoResources">
		<au:expectfailure expectedmessage="no resources specified">
			<jsl:jslint />
		</au:expectfailure>
	</target>

    <target name="testFailsOnError">
        <au:expectfailure expectedmessage="1 file did not pass JSLint">
            <jsl:jslint>
                <fileset file="good.js" />
                <fileset file="bad.js" />
            </jsl:jslint>
        </au:expectfailure>
    </target>

    <target name="testSuccess">
        <jsl:jslint>
            <fileset file="good.js" />
        </jsl:jslint>
    </target>

    <!-- This should turn off the undef option. -->
    <target name="testOptionParams">
        <jsl:jslint options="undef=false">
            <fileset file="undef.js" />
        </jsl:jslint>
    </target>

    <!-- http://code.google.com/p/jslint4java/issues/detail?id=6 -->
    <target name="testIssue6">
        <au:expectfailure expectedmessage="1 file did not pass JSLint">
            <jsl:jslint options="browser,undef,passfail">
                <formatter type="plain" />
                <fileset file="issue6.js" />
            </jsl:jslint>
        </au:expectfailure>
        <!-- This is not the exact same message reported, but was how I was
             able to trigger the same condition. -->
        <au:assertLogContains text="Missing semicolon." />
    </target>

	<target name="testArbitraryResource">
		<au:expectfailure expectedmessage="1 file did not pass JSLint">
			<jsl:jslint>
				<formatter type="plain" />
				<string value="eval(42);" />
			</jsl:jslint>
		</au:expectfailure>
	</target>
</project>
